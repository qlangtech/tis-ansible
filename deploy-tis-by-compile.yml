---
- name: init compile
  vars_files:
    - vars.yml
  hosts: localhost
  tasks:
    - name: init source code dir:'{{src_root}}'
      file:
        path: "{{src_root}}"
        state: directory
    - name: init release dir:'{{ tis_release_dir }}/{{tis_release_dir_name}}'
      file:
        path: "{{ tis_release_dir }}/{{item}}"
        state: directory
      with_items:
        - '{{tis_release_dir_name}}'
        - '{{tis_plugin_release_dir_name}}'
  tags: always

- name: make ng-tis package
  vars_files:
    - vars.yml
  hosts: localhost
  roles:
    - role: ng-tis
  tags:
    - ng-tis

- name: compile tis src tar package
  vars_files:
    - vars.yml
  hosts: localhost
  roles:
    - role: compile
  tags:
    - pkg



- name: compile tis-plugin component tar package
  vars_files:
    - vars.yml
  vars:
    tisasm_put_mojo: plugin_dirs
    exec_deploy: True
    app_local_dir_name: "{{tis_plugin_release_dir_name}}"
    git_src: "git@github.com:qlangtech/plugins.git"
    target_file_pattern: "*.tpi"
  hosts: localhost
  tasks:
    - name: register plugin_dirs in {{src_root}}/{{tis_plugin_release_dir_name}}
      shell: "find {{src_root}}/{{tis_plugin_release_dir_name}} -type d -name '*-plugin' -printf '%f '"
      ignore_errors: True
      register: plugin_dirs
      delegate_to: "localhost"
  roles:
    - role: compile
  tags:
    - pkg-plugin


- name: make tis-incr docker image
  #  vars_prompt:
  #    - name: "docker_password"
  #      prompt: "docker repository password"
  #      private: yes
  vars_files:
    - vars.yml
  hosts: localhost
  roles:
    - role: tis-incr
  tags:
    - incr



- import_playbook: install_struct.yml
  

