---
- name: init compile
  vars_files:
    - vars.yml
  hosts: localhost
  tasks:
    - name: init source code dir:'{{src_root}}'
      file:
        path: "{{src_root}}"
        state: directory
    - name: init release dir:'{{ tis_release_dir }}/{{tis_release_dir_name}}'
      file:
        path: "{{ tis_release_dir }}/{{item}}"
        state: directory
      with_items:
        - '{{tis_release_dir_name}}'
        - '{{tis_plugin_release_dir_name}}'
    - name: download system dependencies
      include_role:
        name: download
      vars:
        - shall_download_plugins: no
        - shall_download_release_assemble: no
  tags: always

- name: make ng-tis package
  vars_files:
    - vars.yml
  hosts: localhost
  roles:
    - role: ng-tis
  tags:
    - ng-tis

- name: compile tis src tar package
  vars_files:
    - vars.yml
  hosts: localhost
  roles:
    - role: compile
  tags:
    - pkg


- name: compile tis-plugin component tar package
  vars_files:
    - vars.yml
  vars:
    exec_deploy: True
    app_local_dir_name: "{{tis_plugin_release_dir_name}}"
    git_src: "git@github.com:qlangtech/plugins.git"
    target_file_pattern: .*\.(tpi|tar\.gz)$
  hosts: localhost
  tasks:
    #    - name: register plugin_dirs in {{src_root}}/{{tis_plugin_release_dir_name}}
    #      shell: "find {{src_root}}/{{tis_plugin_release_dir_name}}/* -maxdepth 1 -type d -name '*-plugin' -printf '%f '"
    #      ignore_errors: True
    #      register: plugin_dirs
    #      delegate_to: "localhost"
    #    - debug:
    #        msg: "registed param plugin_dirs: {{plugin_dirs.stdout}}"
    - include_role:
        name: compile
      vars:
        tisasm_put_mojo: 'tis-local-dump-build tis-solr-plugin tis-aliyun-fs-plugin tis-asyncmsg-rocketmq-plugin tis-hdfs-plugin tis-hive-flat-table-builder-plugin tis-k8s-plugin tis-spark-hive-server-extends tis-ds-mysql-plugin tis-ds-tidb-plugin tis-kafka-plugin'
  tags:
    - pkg-plugin

- name: build Uber package
  vars_files:
    - vars.yml
  hosts: localhost
  tasks:
    - include_role:
        name: console
      vars:
        tis_data_dir: '/tmp/uber_pkg/data'
        app_dir: '/tmp/uber_pkg'

  tags:
    - uber



- name: make tis-incr docker image
  #  vars_prompt:
  #    - name: "docker_password"
  #      prompt: "docker repository password"
  #      private: yes
  vars_files:
    - vars.yml
  hosts: localhost
  roles:
    - role: tis-incr
  tags:
    - incr
#   - deploy



- import_playbook: install_struct.yml
  

