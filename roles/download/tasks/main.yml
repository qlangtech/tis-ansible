---
# tasks file for download
- name: Create Tmp Dir
  file:
    path: "{{tis_release_dir}}/{{tis_release_dir_name}}/{{tis_pkg_version}}"
    state: directory

- name: Download tis plugins to {{ tis_release_dir }}/{{tis_plugin_release_dir_name}}
  get_url:
    url: "{{ release_repository }}/{{tis_pkg_version}}/{{tis_plugin_release_dir_name}}/{{ item.name }}"
    dest: "{{ tis_release_dir }}/{{tis_plugin_release_dir_name}}/{{tis_pkg_version}}/{{ item.name }}"
    #If yes and dest is not a directory, will download the file every time and replace the file if the contents change
    force: yes
  when: item.when
  with_items:
    - {name: "tis-aliyun-hdfs-plugin.tpi", when: True}
    - {name: "tis-asyncmsg-rocketmq-plugin.tpi", when: True}
    - {name: "tis-hdfs-plugin.tpi", when: True}
    - {name: "tis-hive-flat-table-builder-plugin.tpi", when: True}
    - {name: "tis-k8s-plugin.tpi", when: True}

- name: make soft link for '{{ tis_release_dir }}/{{tis_plugin_release_dir_name}}/{{tis_pkg_version}}'
  file:
    src: "{{ tis_release_dir }}/{{tis_plugin_release_dir_name}}/{{tis_pkg_version}}/{{ item }}"
    dest: "{{ tis_release_dir }}/{{tis_plugin_release_dir_name}}/{{ item }}"
    state: link
  with_lines:
    - find {{ tis_release_dir }}/{{tis_plugin_release_dir_name}}/{{tis_pkg_version}} -type f -name "*" -printf '%f\n'

- name: Download tis Release Package to {{ tis_release_dir }}/{{tis_release_dir_name}}
  get_url:
    url: "{{ release_repository }}/{{tis_pkg_version}}/{{ item.name }}"
    dest: "{{ tis_release_dir }}/{{tis_release_dir_name}}/{{tis_pkg_version}}/{{ item.name }}"
    #If yes and dest is not a directory, will download the file every time and replace the file if the contents change
    force: yes
  when: item.when
  with_items:
    - {name: "solr.tar.gz", when: True}
    - {name: "tis-assemble.tar.gz", when: True}
    - {name: "tis-collect.tar.gz", when: True}
    - {name: "tis-index-builder.tar.gz", when: True}
    - {name: "tis.tar.gz", when: True}
    - {name: "tis-scala-compiler-dependencies.tar.gz", when: True}
    - {name: "web-start.tar.gz", when: True}
    - {name: "tis-collect.tar.gz", when: True}
    - {name: "ng-tis.tar.gz", when: True}
    - {name: "tis-incr.tar.gz", when: True}

- name: make soft link for '{{ tis_release_dir }}/{{tis_release_dir_name}}/{{tis_pkg_version}}'
  file:
    src: "{{ tis_release_dir }}/{{tis_release_dir_name}}/{{tis_pkg_version}}/{{ item }}"
    dest: "{{ tis_release_dir }}/{{tis_release_dir_name}}/{{ item }}"
    state: link
  with_lines:
    - find {{ tis_release_dir }}/{{tis_release_dir_name}}/{{tis_pkg_version}} -type f -name "*" -printf '%f\n'


- name: Download Base Release Package to {{ tis_release_dir }}
  get_url:
    url: "{{ release_repository }}/{{ item.name }}"
    dest: "{{ tis_release_dir }}/{{ item.name }}"
    #If yes and dest is not a directory, will download the file every time and replace the file if the contents change
    force: yes
  when: item.when
  with_items:
    - {name: "tis-ibatis.tar.gz", when: True}
    - {name: "{{ java_gz_file_name }}", when: True}
    - {name: "{{ zk_gz_file_name }}", when: "{{ need_install_zookeeper }}" }
    - {name: "{{ hadoop_gz_file_name }}", when: "{{ need_install_hadoop }}" }
    - {name: "{{ spark_scala_gz_file_name }}", when: "{{ need_install_hadoop and need_install_spark }}" }
    - {name: "{{ spark_gz_file_name }}", when: "{{ need_install_hadoop and need_install_spark }}" }
    - {name: "{{ spark_tispark_jar_file_name }}", when: "{{ need_install_hadoop and need_install_spark and need_install_tispark }}" }
    - {name: "{{ spark_thriftserver_jar_file_name }}", when: "{{ need_install_hadoop and need_install_spark and need_install_spark_shuffle }}" }
