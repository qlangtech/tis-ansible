###############################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
# https://github.com/qlangtech/flink-docker/blob/master/1.18/scala_2.12-java8-ubuntu/Dockerfile
###############################################################################

#FROM openjdk:8-jre
#FROM gosu/centos:7

FROM eclipse-temurin:8-jre-jammy as build



# Install dependencies
#RUN set -ex; \
#  apt-get update; \
#  apt-get -y install libsnappy1v5 gettext-base libjemalloc-dev; \
#  rm -rf /var/lib/apt/lists/*

# Grab gosu for easy step-down from root
#ENV GOSU_VERSION 1.11
#RUN set -ex; \
#  wget -nv -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"; \
#  wget -nv -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"; \
#  export GNUPGHOME="$(mktemp -d)"; \
#  for server in ha.pool.sks-keyservers.net $(shuf -e \
#                          hkp://p80.pool.sks-keyservers.net:80 \
#                          keyserver.ubuntu.com \
#                          hkp://keyserver.ubuntu.com:80 \
#                          pgp.mit.edu) ; do \
#      gpg --batch --keyserver "$server" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || : ; \
#  done && \
#  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \
#  gpgconf --kill all; \
#  rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc; \
#  chmod +x /usr/local/bin/gosu; \
#  gosu nobody true

# Configure Flink version
#ENV FLINK_TGZ_URL=https://www.apache.org/dyn/closer.cgi?action=download&filename=flink/flink-1.13.3/flink-1.13.3-bin-scala_2.11.tgz \
#    FLINK_ASC_URL=https://www.apache.org/dist/flink/flink-1.13.3/flink-1.13.3-bin-scala_2.11.tgz.asc \
#    GPG_KEY=19F2195E1B4816D765A2C324C2EED7B111D464BA \
#    CHECK_GPG=true



# Install Flink
#RUN set -ex; \
#  wget -nv -O flink.tgz "$FLINK_TGZ_URL"; \
#  \
#  if [ "$CHECK_GPG" = "true" ]; then \
#    wget -nv -O flink.tgz.asc "$FLINK_ASC_URL"; \
#    export GNUPGHOME="$(mktemp -d)"; \
#    for server in ha.pool.sks-keyservers.net $(shuf -e \
#                            hkp://p80.pool.sks-keyservers.net:80 \
#                            keyserver.ubuntu.com \
#                            hkp://keyserver.ubuntu.com:80 \
#                            pgp.mit.edu) ; do \
#        gpg --batch --keyserver "$server" --recv-keys "$GPG_KEY" && break || : ; \
#    done && \
#    gpg --batch --verify flink.tgz.asc flink.tgz; \
#    gpgconf --kill all; \
#    rm -rf "$GNUPGHOME" flink.tgz.asc; \
#  fi; \
#  \
#  tar -xf flink.tgz --strip-components=1; \
#  rm flink.tgz; \
#  \
#  chown -R flink:flink .;

ADD  {{tis_incr_tar_name}} /opt/flink

ADD {{tis_data_tar_file_name}} /opt/data/


# Configure container
COPY docker-entrypoint.sh /



#RUN INSTALL_PKGS="tar unzip bc which lsof gettext java-1.8.0-openjdk java-1.8.0-openjdk-devel" && \
#    yum install -y --enablerepo=centosplus $INSTALL_PKGS && \
#    rpm -V $INSTALL_PKGS && \
#    mkdir -p /opt/data/tis && chown -R flink:flink /opt/data/tis && mv /opt/data/data/* /opt/data/tis/ && \
#	mkdir -p /opt/logs && chown -R flink:flink /opt/logs && \
#    mkdir -p /opt/tis &&  chown -R flink:flink /opt/tis && chown -R flink:flink $FLINK_HOME && chmod +x /docker-entrypoint.sh && \
#    chmod g=u /etc/passwd && \
#    /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 'Asia/Shanghai' >/etc/timezone


RUN mkdir -p /opt/data/tis && mv /opt/data/data/* /opt/data/tis/


FROM eclipse-temurin:8-jre-jammy

# Grab gosu for easy step-down from root
ENV GOSU_VERSION 1.11
# used by org.apache.flink.kubernetes.kubeclient.Fabric8FlinkKubeClient
ENV TIS_K8S_ENV=true
RUN set -ex; \
  wget -nv -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"; \
  chmod +x /usr/local/bin/gosu; \
  gosu nobody true



# Prepare environment
ENV FLINK_HOME=/opt/flink
ENV PATH=$FLINK_HOME/bin:$PATH
RUN groupadd --system --gid=9999 flink && \
    useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink
WORKDIR $FLINK_HOME

COPY --from=build --chown=flink:flink ["/opt/data"  ,"/opt/data/"]
COPY --from=build --chown=flink:flink ["/opt/flink"  ,"/opt/flink/"]
COPY --from=build --chown=flink:flink ["/docker-entrypoint.sh" ,"/"]

RUN  mkdir -p /opt/logs && chown -R flink:flink /opt/logs && chmod +x /docker-entrypoint.sh

ENTRYPOINT ["/docker-entrypoint.sh"]
EXPOSE 6123 8081
CMD ["help"]
