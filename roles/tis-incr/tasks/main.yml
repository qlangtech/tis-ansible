---
# tasks file for compile

  - name: create docker context dir {{docker_context_dir}}/{{tis_incr_name}}
    file:
      path: '{{docker_context_dir}}/{{tis_incr_name}}'
      state: directory

  - name: copy {{tis_incr_name}} to docker context dir
    copy:
     src: '{{tis_release_dir}}/{{item.tar_name}}'
     dest: '{{docker_context_dir}}/{{item.app}}/'
    with_items:
      - {app : "{{tis_incr_name}}" ,tar_name: "{{tis_incr_tar_name}}"}

  - name : copy run.sh to docker context dir
    template:
     src: template/run.sh.j2
     dest: '{{docker_context_dir}}/{{tis_incr_name}}/run.sh'

  - name : copy Dockerfile to docker context dir {{docker_context_dir}}/{{tis_incr_name}}/
    copy: src="files/Dockerfile" dest="{{docker_context_dir}}/{{tis_incr_name}}/"

 # - name : docker image {{tis_incr_name}} build
 #   command: docker build -t tis/tis-incr -f ./Dockerfile .
 #   args:
 #    chdir: "{{docker_context_dir}}/{{tis_incr_name}}"

  # https://cr.console.aliyun.com/repository/cn-hangzhou/tis/tis-incr/details
  - name: log into private registry and force re-authorization
    docker_login:
      registry: registry.cn-hangzhou.aliyuncs.com
      username: hi30872750@aliyun.com
      password: hello1234
      reauthorize: yes

  - name: Build and Push docker {{tis_incr_name}}
    docker_image:
      build:
        path: "{{docker_context_dir}}/{{tis_incr_name}}"
      name: registry.cn-hangzhou.aliyuncs.com/tis/tis-incr
      push: yes
      source: build

  - name: clean docker context dir {{docker_context_dir}}/{{tis_incr_name}}
    file:
      path: '{{docker_context_dir}}/{{tis_incr_name}}'
      state: absent
     
     