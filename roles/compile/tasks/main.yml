---
# tasks file for compile  
  - name: judge maven is deployed
    shell: ls {{mvn_home}}/conf/settings.xml
    ignore_errors: True
    register: ismvndeploy
    
  - name: make {{mvn_local_repo}} {{mvn_home}}
    file:
     path: "{{item}}"
     state: directory
    with_items:
     - "{{mvn_local_repo}}"
     - "{{mvn_home}}"
    when: ismvndeploy is failed
  
  - name: deploy maven builder
    unarchive:
      src: '{{release_repository}}/{{mvn_zip_package_name}}'
      dest: '{{mvn_parent_dir}}'
      remote_src: yes
    when: ismvndeploy is failed
  
  - name: make sh mvn mode
    file:
     path: "{{mvn_home}}/bin/mvn"
     mode: u+rwx
    when: ismvndeploy is failed
  
  - name: make log dir
    file:
     path: "{{mvn_home}}/conf/logging"
     state: directory
    when: ismvndeploy is failed
       
  - template:
     src: template/settings.xml.j2
     dest: '{{mvn_home}}/conf/settings.xml'
    when: ismvndeploy is failed
   
  - name: mkdir
    file:
     path: "{{src_dir}}"
     state: directory
    when: ismvndeploy is failed

  - name: git pull {{git_src}}@{{git_branch}} {{src_dir}}
    git:
     repo: '{{git_src}}'
     dest: '{{src_dir}}'
     version: '{{git_branch}}'
     force: yes
     accept_hostkey: yes
  
  - name: copy compile shell script
    template:
     src: template/compile.sh.j2
     dest: '{{src_dir}}/compile.sh'
     mode: u+rwx
 
  - name: clear old package
    file:
       path: '{{item}}'
       state: absent
    with_lines:
       - find {{src_dir}} -type f -name "{{target_file_pattern}}" -printf '%p\n'
  
  - name: compile and package {{src_dir}}
    shell: ./compile.sh {{runtime}} {{appname}} > exec.log
    args:
     chdir: "{{src_dir}}"
     
  - name: make release dir
    file:
     path: '{{tis_release_dir}}/{{app_local_dir_name}}'
     state: directory
  
  - name: clear release dir package
    file:
       path: '{{tis_release_dir}}/{{app_local_dir_name}}/*'
       state: absent
#    with_lines:
#       - find {{tis_release_dir}} -type f -name "{{target_file_pattern}}" -printf '%p\n'

  - name: copy to release dir {{tis_release_dir}}/{{app_local_dir_name}}
    copy:
       src: '{{item}}'
       dest: '{{tis_release_dir}}/{{app_local_dir_name}}/{{item}}'
    with_lines:
       - find {{src_dir}} -type f -name "{{target_file_pattern}}" -printf '%p\n'


     
     