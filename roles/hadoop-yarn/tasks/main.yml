---
# tasks file for taskcenter
  
  - group: name={{ hadoop_group}} state=present
  - user: name={{ hadoop_user }} comment="Hadoop" group={{ hadoop_group}} shell=/bin/bash
  
  - name: remove old file
    file:
      path: /tmp/{{item}}
      state: absent
    with_items:
     - "{{hadoop_dir_name}}"
     - "{{hadoop_dir_name}}.tar.gz"
      
  - name: get hadoop tar from http repository
    get_url:
     url: "{{release_repository}}/{{item}}"
     dest: "/tmp/{{item}}"
    with_items:
     - "{{hadoop_dir_name}}.tar.gz"
 
  - name: untar 
    unarchive:
     src: '/tmp/{{hadoop_dir_name}}.tar.gz'
     dest: /tmp/
     remote_src: yes
     
  - name: synchronize files
    synchronize:
      src: '/tmp/{{hadoop_dir_name}}'
      dest: '{{hadoop_parent_dir}}'
      delete: yes
    delegate_to: "{{ inventory_hostname }}"

  - name: create config dir 
    file:
      path: '{{hadoop_cfg_dir}}'
      state: directory
      
  - name: copy config files
    template:
      src: 'template/{{item.name}}.j2'
      dest: '{{hadoop_cfg_dir}}/{{item.name}}'
    with_items:
      - {name: "hdfs-site.xml" }
      - {name: "yarn-site.xml"}
      - {name: "config.properties"}
      
  - name: "Build hosts file yarn master"
    lineinfile: dest=/etc/hosts regexp='{{ item.ansible_ssh_host }}' line="{{ item.ansible_ssh_host }} {{ item }}" state=present
    with_items: "{{groups['hadoop-yarn-resource-manager']}}"
    
  - name: "Build hosts file yarn slaver"
    lineinfile: dest=/etc/hosts regexp='{{ item.ansible_ssh_host }}' line="{{ item.ansible_ssh_host }} {{ item }}" state=present
    with_items: "{{groups['hadoop-yarn']}}"
  
  - lineinfile: dest="{{hadoop_cfg_dir}}/yarn-env.sh" regexp="^export JAVA_HOME" line="export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-oracle.x86_64"
  
 
  - name: set owner
    file:
     path: '{{hadoop_dir}}'
     owner: {{hadoop_user}}
     group: {{hadoop_group}}
     recurse: yes