---
# tasks file for console
- name: empty {{tis_data_dir}}/libs/tis-ibatis
  file:
    path: "{{tis_data_dir}}/libs/tis-ibatis"
    state: absent

- name: make empty dir of {{tis_data_dir}}/libs/tis-ibatis
  file:
    path: "{{tis_data_dir}}/libs/tis-ibatis"
    state: directory

- name: install tis-ibatis dependencies
  unarchive:
    src: "{{ tis_release_dir }}/{{tis_ibatis_gz_file_name}}"
    dest: "{{tis_data_dir}}/libs/tis-ibatis/"

- name: clean {{tis_scala_compiler_dependencies_dir_name}}
  file:
    path: "{{tis_data_dir}}/libs/{{tis_scala_compiler_dependencies_dir_name}}"
    state: absent

- name: install {{tis_scala_compiler_dependencies_dir_name}}
  unarchive:
    src: "{{ tis_release_dir }}/{{tis_release_dir_name}}/{{tis_scala_compiler_dependencies_gz_file_name}}"
    dest: "{{tis_data_dir}}/libs/"

- name: git pull {{tis_local_cfg_git_repository}}@master '{{tis_data_dir}}/cfg_repo'
  git:
    repo: '{{tis_local_cfg_git_repository}}'
    dest: '{{tis_data_dir}}/cfg_repo'
    version: 'master'
    force: yes
    accept_hostkey: yes
  when: tis_local_cfg_git_repository_install

- name: init {{tis_data_dir}}/cfg_repo
  file:
    path: '{{tis_data_dir}}/cfg_repo'
    state: directory
  when: not tis_local_cfg_git_repository_install

- name: copy plugin config file
  template:
    src: "plugin_cfg/{{item}}.j2"
    dest: "{{tis_data_dir}}/cfg_repo/{{item}}"
    force: no
    mode: '0644'
  when: not tis_local_cfg_git_repository_install
  with_items:
    - "global/global_config.xml"
    - "com.qlangtech.tis.offline.FileSystemFactory.xml"
    - "com.qlangtech.tis.offline.FlatTableBuilder.xml"
    - "com.qlangtech.tis.offline.IndexBuilderTriggerFactory.xml"
    - "com.qlangtech.tis.offline.TableDumpFactory.xml"
    - "com.qlangtech.tis.offline.IncrStreamFactory.xml"

- name: copy tar
  copy:
     src: "{{tis_release_dir}}/{{tis_release_dir_name}}/{{item}}"
     dest: /tmp/
  with_items:
     - "tis.tar.gz"

- name: copy plugins from "{{tis_release_dir}}/tis-plugin/"
  synchronize:
    src: "{{tis_release_dir}}/{{tis_plugin_release_dir_name}}/"
    dest: "{{tis_data_dir}}/libs/plugins/"
    copy_links: yes
    delete: yes
  notify: restart tis-console

- name: delete history tis.tar.gz
  file:
    path: /tmp/tis
    state: absent

- name: untar tis.tar.gz
  unarchive:
     src: /tmp/tis.tar.gz
     dest: /tmp/
     remote_src: yes

- name: synchroniz tis
  synchronize:
     src: /tmp/tis/
     dest: "/opt/app/spring-boot/{{tis_app_name}}"
     delete: yes
     recursive: yes
  delegate_to: "{{ inventory_hostname }}"
  notify: restart tis-console

#- name: copy config.properties
#  template:
#     src: template/hdfs-site-proxy.xml.j2
#     dest: /opt/app/spring-boot/tis/conf/tis-web-config/hdfs-site.xml

- name: copy config.properties
  template:
     src: "template/{{item}}.j2"
     dest: "/opt/app/spring-boot/{{tis_app_name}}/conf/tis-web-config/{{item}}"
  with_items:
     - "config.properties"
     - "yarn-site.xml"
  notify: restart tis-console

- name: path owner set
  file:
     path: '/opt/app/spring-boot/{{tis_app_name}}'
     owner: "{{tis_user}}"
     group: "{{tis_user}}"
     recurse: yes

- name: set tis dir mode
  file:
    path: "{{tis_data_dir}}"
    owner: "{{tis_user}}"
    group: "{{tis_user}}"
    mode: '0777'
    recurse: yes

- name: register file 'system_initialized_token' exist
  shell: 'ls {{ tis_data_dir }}'
  ignore_errors: True
  register: system_initialized_token_exist

- name: initialize tis data
  shell: java -classpath ../web-start/lib/*:./lib/*:./conf com.qlangtech.tis.runtime.module.action.SysInitializeAction 1>./init_stdout 2>./init_stderr
  args:
    chdir: "/opt/app/spring-boot/{{tis_app_name}}"
  when: system_initialized_token_exist.stdout.find('system_initialized_token') < 0