<?xml version='1.0' encoding='UTF-8'?>
<com.qlangtech.tis.plugin.PluginStore>
    <plugins>
        <com.qlangtech.tis.config.k8s.impl.DefaultK8sContext plugin="tis-k8s-plugin@{{tis_pkg_version}}">
            <name>dftkube</name>
            <kubeBasePath>https://192.168.28.201:8443</kubeBasePath>
                  <kubeConfigContent>apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUS
    server: https://192.168.28.201:8443
  name: minikube
contexts:
- context:
    cluster: minikube
    user: minikube
  name: minikube
current-context: minikube
kind: Config
preferences: {}
users:
- name: minikube
  user:
   client-certificate-data: LS0tLS1CRUdJTiBDLRVktLS
   client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSB0</kubeConfigContent>
        </com.qlangtech.tis.config.k8s.impl.DefaultK8sContext>
{% if not uber_pkg %}
        <com.qlangtech.tis.config.yarn.YarnConfig plugin="tis-hive-flat-table-builder-plugin@{{tis_pkg_version}}">
            <name>yarn1</name>
            <rmAddress>{{ hadoop_yarn_resource_manager_host }}:8032</rmAddress>
            <schedulerAddress>{{ hadoop_yarn_resource_manager_host }}:8030</schedulerAddress>
        </com.qlangtech.tis.config.yarn.YarnConfig>
{% endif %}

    <com.qlangtech.tis.plugin.datax.DataXGlobalConfig plugin="tis-datax-common-plugin@{{tis_pkg_version}}">
      <name>datax-global-config</name>
      <channel>3</channel>
      <errorLimitCount>1</errorLimitCount>
      <errorLimitPercentage>0.02</errorLimitPercentage>
      <template>{
    &quot;job&quot;: {
        &quot;setting&quot;: {
            &quot;speed&quot;: {
                 &quot;channel&quot;: ${cfg.channel}
            },
            &quot;errorLimit&quot;: {
                &quot;record&quot;: ${cfg.errorLimitCount},
                &quot;percentage&quot;: ${cfg.errorLimitPercentage}
            }
        },
        &quot;content&quot;: [
            {
                &quot;reader&quot;: &lt;!--reader--&gt;,
                &quot;writer&quot;: &lt;!--writer--&gt;
            }
        ]
    }
}
    </template>
    </com.qlangtech.tis.plugin.datax.DataXGlobalConfig>
    </plugins>
</com.qlangtech.tis.plugin.PluginStore>