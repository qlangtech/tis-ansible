#!/bin/bash

# If intend to active Zeppelin Notebook in TIS , Download tis-zeppelin-0.10.1-bin-all.tar.gz from TIS repository,And uncomment line below
# export ZEPPELIN_HOME=/xxxxx/zeppelin-0.10.1-bin-all

# Initialize variables that cannot be provided by a .conf file
#WORKING_DIR="$(pwd)"

PRG="$0"

# Resolve symlinks to this script
while [ -h "$PRG" ] ; do
  ls=`ls -ld "$PRG"`
  # Drop everything prior to ->
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

TIS_TIP=`dirname "$PRG"`/..
TIS_TIP=`cd "$TIS_TIP"; pwd`

echo "working dir:$TIS_TIP"

export TIS_HOME="$TIS_TIP"

{% set tis_app_launch_main = '-jar ' + relative_root_dir + '/' + tis_app_name + '/' + tis_app_name + '.jar' %}
{% if uber_pkg %}
 {% set relative_root_dir = '${TIS_TIP}'%}
 {% set tis_app_dir = relative_root_dir + bin_dir_name %}
{% endif %}

{% set tis_app_launch_main = '-classpath ' + relative_root_dir + '/'  + tis_app_name+ '/lib/*:' + relative_root_dir + '/' + tis_app_name+ '/conf:'+relative_root_dir+ '/' + tis_app_name + '/' + tis_app_name + '.jar com.qlangtech.tis.web.start.TisApp' %}


{% set not_fetch_from_center_repository = '' %}
{% if uber_pkg %}
  {% set app_dir = relative_root_dir %}
  {% set tis_data_dir = relative_root_dir + '/data'   %}
  {% set not_fetch_from_center_repository = '-DnotFetchFromCenterRepository=true' %}
  {% set app_home = '$TIS_TIP' %}
{% endif %}


APP_NAME={{tis_app_name}}
SERVER_PORT={{tis_server_port}}
#JAR_PATH='/app/uid-consumer'
JAR_NAME={{tis_app_name}}.jar
JAR_PID={{relative_root_dir}}$JAR_NAME\.pid

{% if uber_pkg %}
 LOG_FILE="{{relative_root_dir}}/logs"
{% else %}
 LOG_FILE="{{tis_log_dir}}"
{% endif %}

if [ -z "$JAVA_JVM_OPTS" ]; then
    JAVA_JVM_OPTS="{{tis_java_mem}} "
fi


JAVA_OPTS="$JAVA_JVM_OPTS  -XX:ParallelGCThreads=4 -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=utf-8 -Dtis.launch.port=$SERVER_PORT {{not_fetch_from_center_repository}} -Ddata.dir={{tis_data_dir}} -Dlog.dir=$LOG_FILE -Dweb.root.dir={{app_home}}  -Xrunjdwp:transport=dt_socket,address=50000,suspend=n,server=y"


is_exist() {
  pid=`ps -ef|grep $JAR_NAME|grep -v grep|awk '{print $2}' `

  if [ -z "${pid}" ]; then
   return 0
  else
    return 1
  fi
}



start() {
  is_exist
  if [ $? -eq "1" ]; then
    echo "$APP_NAME is already running pid is ${pid}"
  else

  {% if uber_docker_pkg %}
      java $JAVA_OPTS -Xloggc:$LOG_FILE/gc/gclog.log -XX:HeapDumpPath=$LOG_FILE/gc/HeapDump.hprof {{tis_app_launch_main}}
  {% else %}
     exec java $JAVA_OPTS -Xloggc:$LOG_FILE/gc/gclog.log -XX:HeapDumpPath=$LOG_FILE/gc/HeapDump.hprof {{tis_app_launch_main}} >$LOG_FILE/tis.log 2>&1 &
     echo $! > $JAR_PID
     echo "start $APP_NAME successed pid is $! "
     tail -1000f $LOG_FILE/tis.log | sed '/Started/Q'
  {% endif %}

   fi
}


stop() {
  # is_exist
  pidf=$(cat $JAR_PID)
  # echo "$pidf"
  echo "pid = $pidf begin kill $pidf"
  kill $pidf
  rm -rf $JAR_PID
  sleep 2

  is_exist
  if [ $? -eq "1" ]; then
    echo "pid = $pid begin kill -9 $pid"
    kill -9  $pid
    sleep 2
    echo "$APP_NAME process stopped！"
  else
    echo "$APP_NAME is not running！"
  fi
}


status() {
  is_exist
  if [ $? -eq "1" ]; then
    echo "$APP_NAME is running，pid is ${pid}"
  else
    echo "$APP_NAME is not running！"
  fi
}


restart() {

  stop

  start
}


usage() {
    echo "Usage: sh run-service.sh [ start | stop | restart | status ]"
    exit 1
}

subCommand=$1

if [ -z "$subCommand" ]; then
    subCommand="start"
fi

case "$subCommand" in
  'start')
    start
    ;;
  'stop')
    stop
    ;;
  'restart')
    restart
    ;;
  'status')
    status
    ;;
  *)
    usage
    ;;
esac
exit 0
